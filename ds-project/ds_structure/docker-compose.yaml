version: '3.8'

x-servernode-common:
  &servernode-common
    image: server-node
    build:
      context: ../
      dockerfile: src/de/luh/vss/chat/server/Dockerfile
    environment:
      DB_URL: jdbc:postgresql://postgres_primary:5432/mydb
      DB_USER: user
      DB_PASSWORD: password
    depends_on:
      - postgres_primary


services:
  # Primary PostgreSQL service (Master)
  postgres_primary:
    image: postgres:14-alpine
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - db-net

  # Loadbalancer als Einstiegspunkt f√ºr Clients
  loadbalancer:
    image: loadbalancer
    build:
      context: ../
      dockerfile: src/de/luh/vss/chat/loadbalancer/Dockerfile
    ports:
      - "8080:8080"
      - "8081:8081/udp"
    networks:
      - net1
      - net2

  # Servernode 1 & 2 im gleichen Netzwerk
  servernode1:
    <<: *servernode-common
    ports:
      - "4444:4444"
    networks:
      - net1
      - db-net
    command: ["java", "-cp", ".:lib/postgresql-42.7.5.jar", "de.luh.vss.chat.server.ServerNode", "4444","servernode1"]

  servernode2:
    <<: *servernode-common
    ports:
      - "4445:4444"
    networks:
      - net1
      - db-net
    command: ["java", "-cp", ".:lib/postgresql-42.7.5.jar", "de.luh.vss.chat.server.ServerNode", "4445", "servernode2"]

  # Servernode 3 im anderem Netzwerk
  servernode3:
    <<: *servernode-common
    ports:
      - "4446:4444"
    networks:
      - net2
      - db-net
    command: ["java", "-cp", ".:lib/postgresql-42.7.5.jar", "de.luh.vss.chat.server.ServerNode", "4446","servernode3"]

networks:
  net1:
    driver: bridge
  net2:
    driver: bridge
  db-net: 
    driver: bridge
